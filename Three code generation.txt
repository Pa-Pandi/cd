// Function to display quadruples as a table
void displayQuadruplesTable(const vector<Quadruple>& quadruples) {
    cout << "Quadruples:\n";
    cout << "-----------------------------------------\n";
    cout << "|  Op  |  Arg1  |  Arg2  |  Result  |\n";
    cout << "-----------------------------------------\n";
    for (const auto& quad : quadruples) {
        cout << "| " << quad.op << " | " << quad.arg1 << " | " << quad.arg2 << " | " << quad.result << " |\n";
    }
    cout << "-----------------------------------------\n";
}

// Function to display triples as a table
void displayTriplesTable(const vector<Triple>& triples) {
    cout << "Triples:\n";
    cout << "--------------------------------\n";
    cout << "|  Op  |  Arg1  |  Arg2  |\n";
    cout << "--------------------------------\n";
    for (const auto& trip : triples) {
        cout << "| " << trip.op << " | " << trip.arg1 << " | " << trip.arg2 << " |\n";
    }
    cout << "--------------------------------\n";
}

// Function to display indirect triples as a table
void displayIndirectTriplesTable(const vector<IndirectTriple>& indTriples) {
    cout << "Indirect Triples:\n";
    cout << "--------------------------------\n";
    cout << "|  Op  |  Arg1  |  Arg2  |\n";
    cout << "--------------------------------\n";
    for (const auto& indTrip : indTriples) {
        cout << "| " << indTrip.op << " | " << indTrip.arg1 << " | " << indTrip.arg2 << " |\n";
    }
    cout << "--------------------------------\n";
}

int main() {
    // Generate intermediate code for if statement
    vector<Quadruple> ifQuadruples = generateIfCode("x > y", "label1", "label2");
    cout << "Example If Statement:\n";
    displayQuadruplesTable(ifQuadruples);
   
    // Generate intermediate code for while statement
    vector<Quadruple> whileQuadruples = generateWhileCode("x > 0", "loopStart", "loopEnd");
    cout << "\nExample While Statement:\n";
    displayQuadruplesTable(whileQuadruples);

    // Convert quadruples to triples and display
    vector<Triple> ifTriples = convertToTriples(ifQuadruples);
    cout << "\nTriples for If Statement:\n";
    displayTriplesTable(ifTriples);

    vector<Triple> whileTriples = convertToTriples(whileQuadruples);
    cout << "\nTriples for While Statement:\n";
    displayTriplesTable(whileTriples);

    // Convert quadruples to indirect triples and display
    vector<IndirectTriple> ifIndTriples = convertToIndirectTriples(ifQuadruples);
    cout << "\nIndirect Triples for If Statement:\n";
    displayIndirectTriplesTable(ifIndTriples);

    vector<IndirectTriple> whileIndTriples = convertToIndirectTriples(whileQuadruples);
    cout << "\nIndirect Triples for While Statement:\n";
    displayIndirectTriplesTable(whileIndTriples);

    return 0;
}